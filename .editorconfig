# Most of the rules were taken from here https://github.com/dotnet/runtime/blob/main/.editorconfig
# editorconfig.org

# top-most EditorConfig file
root = true

# Default settings:
# A newline ending every file
# Use 4 spaces as indentation
[*]
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true



# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options
# C# files
[*.cs]
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async:suggestion

# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error

# Types: use keywords instead of BCL types, and permit var only when the type is clear
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008
csharp_style_var_for_built_in_types = false:error
csharp_style_var_when_type_is_apparent = false:error
csharp_style_var_elsewhere = false:error
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0049
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# Constants are UPPERCASE
dotnet_naming_rule.constants_should_be_upper_case.severity = error
dotnet_naming_rule.constants_should_be_upper_case.symbols = constants
dotnet_naming_rule.constants_should_be_upper_case.style = constant_style
dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const
dotnet_naming_style.constant_style.capitalization = all_upper

# static fields should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity = suggestion
dotnet_naming_rule.static_fields_should_have_prefix.symbols  = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style    = static_prefix_style
dotnet_naming_symbols.static_fields.applicable_kinds   = field
dotnet_naming_symbols.static_fields.required_modifiers = static
dotnet_naming_symbols.static_fields.applicable_accessibilities = private, internal, private_protected
dotnet_naming_style.static_prefix_style.required_prefix = s_
dotnet_naming_style.static_prefix_style.capitalization = camel_case

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = error
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style    = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case

# Code style defaults
csharp_using_directive_placement = outside_namespace:error
dotnet_sort_system_directives_first = true
csharp_prefer_braces = true:error
csharp_preserve_single_line_blocks = true:none
csharp_preserve_single_line_statements = false
csharp_prefer_static_local_function = true:error
csharp_prefer_simple_using_statement = false:none
csharp_style_prefer_switch_expression = true:error
dotnet_style_readonly_field = true:error

# Expression-level preferences
dotnet_style_object_initializer = true:error
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_collection_expression = when_types_exactly_match
dotnet_style_explicit_tuple_names = true:error
dotnet_style_coalesce_expression = true:error
dotnet_style_null_propagation = true:error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
dotnet_style_prefer_inferred_tuple_names = true:error
dotnet_style_prefer_inferred_anonymous_type_member_names = true:error
dotnet_style_prefer_auto_properties = true:error
dotnet_style_prefer_conditional_expression_over_assignment = true:error
dotnet_style_prefer_conditional_expression_over_return = true:error
csharp_prefer_simple_default_expression = false:error

# Expression-bodied members
csharp_style_expression_bodied_methods = false:error
csharp_style_expression_bodied_constructors = false:error
csharp_style_expression_bodied_operators = true:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = false:error
csharp_style_expression_bodied_lambdas = when_one_single_line:error
csharp_style_expression_bodied_local_functions = false:error

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:error
csharp_style_pattern_matching_over_as_with_null_check = true:error
csharp_style_inlined_variable_declaration = true:error

# Null checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Other features
csharp_style_prefer_index_operator = false:none
csharp_style_prefer_range_operator = false:none
csharp_style_pattern_local_over_anonymous_function = true:none
dotnet_diagnostic.IDE0005.severity = error
csharp_style_namespace_declarations = file_scoped:error
csharp_style_prefer_primary_constructors = false
dotnet_diagnostic.IDE0290.severity = none
dotnet_diagnostic.IDE0060.severity = error # Remove unused parameter https://learn.microsoft.com/en-gb/dotnet/fundamentals/code-analysis/style-rules/ide0060
dotnet_diagnostic.IDE0052.severity = error # Remove unread private member https://learn.microsoft.com/en-gb/dotnet/fundamentals/code-analysis/style-rules/ide0052

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false



# https://gist.github.com/kurnakovv/70a5d76dc5f3eb9ef114b182283cb407
##
## StyleCop.Analyzers
##
# All rules here https://github.com/DotNetAnalyzers/StyleCopAnalyzers/tree/master/documentation

# A violation of this rule occurs when a compilation (project) contains one or more files which are parsed with the DocumentationMode set to None. This most frequently occurs when the project is configured to not produce an XML documentation file during the build.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA0001.md
dotnet_diagnostic.SA0001.severity = none

# This rule reports cases where the StyleCop Analyzers settings file could not be loaded. When this occurs, the various analyzers automatically fall back to using the default settings, which may not match the user's expectations.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA0002.md
dotnet_diagnostic.SA0002.severity = none


# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1000.md
dotnet_diagnostic.SA1000.severity = none

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1001.md
dotnet_diagnostic.SA1001.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1002.md
dotnet_diagnostic.SA1002.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1003.md
dotnet_diagnostic.SA1003.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1004.md
dotnet_diagnostic.SA1004.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1005.md
dotnet_diagnostic.SA1005.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1006.md
dotnet_diagnostic.SA1006.severity = none

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1007.md
dotnet_diagnostic.SA1007.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1008.md
dotnet_diagnostic.SA1008.severity = none

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1009.md
dotnet_diagnostic.SA1009.severity = none

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1010.md
dotnet_diagnostic.SA1010.severity = none

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1011.md
dotnet_diagnostic.SA1011.severity = none

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1012.md
dotnet_diagnostic.SA1012.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1013.md
dotnet_diagnostic.SA1013.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1014.md
dotnet_diagnostic.SA1014.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1015.md
dotnet_diagnostic.SA1015.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1016.md
dotnet_diagnostic.SA1016.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1017.md
dotnet_diagnostic.SA1017.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1018.md
dotnet_diagnostic.SA1018.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1019.md
dotnet_diagnostic.SA1019.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1020.md
dotnet_diagnostic.SA1020.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1021.md
dotnet_diagnostic.SA1021.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1022.md
dotnet_diagnostic.SA1022.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1023.md
dotnet_diagnostic.SA1023.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1024.md
dotnet_diagnostic.SA1024.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1025.md
dotnet_diagnostic.SA1025.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1026.md
dotnet_diagnostic.SA1026.severity = error

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1027.md
dotnet_diagnostic.SA1027.severity = none

# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1028.md
dotnet_diagnostic.SA1028.severity = error


### Readability Rules (SA1100-)
# Rules which ensure that the code is well-formatted and readable.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/ReadabilityRules.md

# A call to a member from an inherited class begins with `base.`, and the local class does not contain an override or implementation of the member.
dotnet_diagnostic.SA1100.severity = none

# A call to an instance member of the local class or a base class is not prefixed with 'this.', within a C# code file.
dotnet_diagnostic.SA1101.severity = none

# A C# query clause does not begin on the same line as the previous clause, or on the next line.
dotnet_diagnostic.SA1102.severity = error

# The clauses within a C# query expression are not all placed on the same line, and each clause is not placed on its own line.
dotnet_diagnostic.SA1103.severity = error

# A clause within a C# query expression begins on the same line as the previous clause, when the previous clause spans across multiple lines.
dotnet_diagnostic.SA1104.severity = error

# A clause within a C# query expression spans across multiple lines, and does not begin on its own line.
dotnet_diagnostic.SA1105.severity = error

# The C# code contains an extra semicolon.
dotnet_diagnostic.SA1106.severity = error

# The C# code contains more than one statement on a single line.
dotnet_diagnostic.SA1107.severity = error

# A C# statement contains a comment between the declaration of the statement and the opening brace of the statement.
dotnet_diagnostic.SA1108.severity = error

# A C# statement contains a region tag between the declaration of the statement and the opening brace of the statement.
dotnet_diagnostic.SA1109.severity = error

# The opening parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the method or indexer name.
dotnet_diagnostic.SA1110.severity = none

# The closing parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the last parameter.
dotnet_diagnostic.SA1111.severity = none

# The closing parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the opening bracket when the element does not take any parameters.
dotnet_diagnostic.SA1112.severity = error

# A comma between two parameters in a call to a C# method or indexer, or in the declaration of a method or indexer, is not placed on the same line as the previous parameter.
dotnet_diagnostic.SA1113.severity = error

# The start of the parameter list for a method or indexer call or declaration does not begin on the same line as the opening bracket, or on the line after the opening bracket.
dotnet_diagnostic.SA1114.severity = none

# A parameter within a C# method or indexer call or declaration does not begin on the same line as the previous parameter, or on the next line.
dotnet_diagnostic.SA1115.severity = none

# The parameters to a C# method or indexer call or declaration span across multiple lines, but the first parameter does not start on the line after the opening bracket.
dotnet_diagnostic.SA1116.severity = none

# The parameters to a C# method or indexer call or declaration are not all on the same line or each on a separate line.
dotnet_diagnostic.SA1117.severity = error

# A parameter to a C# method or indexer, other than the first parameter, spans across multiple lines.
dotnet_diagnostic.SA1118.severity = error

# A C# statement contains parenthesis which are unnecessary and should be removed.
dotnet_diagnostic.SA1119.severity = error

# The C# comment does not contain any comment text.
dotnet_diagnostic.SA1120.severity = error

# The code uses one of the basic C# types, but does not use the built-in alias for the type.
dotnet_diagnostic.SA1121.severity = error

# The C# code includes an empty string, written as `"`.
dotnet_diagnostic.SA1122.severity = error

# The C# code contains a region within the body of a code element.
dotnet_diagnostic.SA1123.severity = none

# The C# code contains a region.
dotnet_diagnostic.SA1124.severity = none

# The Nullable type has been defined not using the C# shorthand.
dotnet_diagnostic.SA1125.severity = error

# A call to a member is not prefixed with the 'this.', 'base.', 'object.' or 'typename.' prefix to indicate the intended method call, within a C# code file.
dotnet_diagnostic.SA1126.severity = error

# A generic constraint on a type or method declaration is on the same line as the declaration, within a C# code file.
dotnet_diagnostic.SA1127.severity = error

# A constructor initializer is on the same line as the constructor declaration, within a C# code file.
dotnet_diagnostic.SA1128.severity = none

# A value type was constructed using the syntax `new T()`.
dotnet_diagnostic.SA1129.severity = error

# An anonymous method was declared using the form `delegate (parameters) { }`, when a lambda expression would provide equivalent behavior with the syntax `(parameters) => { }`.
dotnet_diagnostic.SA1130.severity = error

# A comparison was made between a variable and a literal or constant value, and the variable appeared on the right-hand side of the expression.
dotnet_diagnostic.SA1131.severity = error

# Two or more fields were declared in the same field declaration syntax.
dotnet_diagnostic.SA1132.severity = error

# Two or more attributes appeared within the same set of square brackets.
dotnet_diagnostic.SA1133.severity = error

# An attribute is placed on the same line of code as another attribute or element.
dotnet_diagnostic.SA1134.severity = error

# A using directive is not qualified.
dotnet_diagnostic.SA1135.severity = error

# Multiple enum values are placed on the same line of code.
dotnet_diagnostic.SA1136.severity = error

# Two sibling elements which each start on their own line have different levels of indentation.
dotnet_diagnostic.SA1137.severity = error

# Use literal suffix notation instead of casting.
dotnet_diagnostic.SA1139.severity = error

# Use tuple syntax instead of the underlying ValueTuple implementation type.
dotnet_diagnostic.SA1141.severity = error


### Ordering Rules (SA1200-)
# Rules which enforce a standard ordering scheme for code contents.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/OrderingRules.md

# A C# using directive is placed outside of a namespace element.
dotnet_diagnostic.SA1200.severity = none

# An element within a C# code file is out of order in relation to the other elements in the code.
dotnet_diagnostic.SA1201.severity = error

# An element within a C# code file is out of order within regard to access level, in relation to other elements in the code.
dotnet_diagnostic.SA1202.severity = error

# A constant field is placed beneath a non-constant field.
dotnet_diagnostic.SA1203.severity = error

# A static element is positioned beneath an instance element of the same type.
dotnet_diagnostic.SA1204.severity = none

# The partial element does not have an access modifier defined.
dotnet_diagnostic.SA1205.severity = error

# The keywords within the declaration of an element do not follow a standard ordering scheme.
dotnet_diagnostic.SA1206.severity = none

# The keyword *protected* is positioned after the keyword *internal* within the declaration of a protected internal C# element.
dotnet_diagnostic.SA1207.severity = error

# A using directive which declares a member of the *System* namespace appears after a using directive which declares a member of a different namespace, within a C# code file.
dotnet_diagnostic.SA1208.severity = none

# A using-alias directive is positioned before a regular using directive.
dotnet_diagnostic.SA1209.severity = error

# The using directives within a C# code file are not sorted alphabetically by namespace.
dotnet_diagnostic.SA1210.severity = none

# The using-alias directives within a C# code file are not sorted alphabetically by alias name.
dotnet_diagnostic.SA1211.severity = none

# A get accessor appears after a set accessor within a property or indexer.
dotnet_diagnostic.SA1212.severity = error

# An add accessor appears after a remove accessor within an event.
dotnet_diagnostic.SA1213.severity = error

# A readonly field is positioned beneath a non-readonly field.
dotnet_diagnostic.SA1214.severity = error

# An instance readonly element is positioned beneath an instance non-readonly element of the same type.
dotnet_diagnostic.SA1215.severity = error

# A `using static` directive is positioned at the wrong location (before a regular using directive or after an alias using directive).
dotnet_diagnostic.SA1216.severity = error

# The `using static` directives within a C# code file are not sorted alphabetically by full type name.
dotnet_diagnostic.SA1217.severity = error


### Naming Rules (SA1300-)
# Rules which enforce naming requirements for members, types, and variables.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/NamingRules.md

# The name of a C# element does not begin with an upper-case letter.
dotnet_diagnostic.SA1300.severity = error

# There are currently no situations in which this rule will fire.
dotnet_diagnostic.SA1301.severity = none

# The name of a C# interface does not begin with the capital letter I.
dotnet_diagnostic.SA1302.severity = error

# The name of a constant C# field should begin with an upper-case letter.
dotnet_diagnostic.SA1303.severity = none

# The name of a non-private readonly C# field should being with an upper-case letter.
dotnet_diagnostic.SA1304.severity = error

# The name of a field or variable in C# uses Hungarian notation.
dotnet_diagnostic.SA1305.severity = none

# The name of a field in C# does not begin with a lower-case letter.
dotnet_diagnostic.SA1306.severity = error

# The name of a public or internal field in C# does not begin with an upper-case letter.
dotnet_diagnostic.SA1307.severity = error

# A field name in C# is prefixed with *m_* or *s_*.
dotnet_diagnostic.SA1308.severity = none

# A field name in C# begins with an underscore.
dotnet_diagnostic.SA1309.severity = none

# A field name in C# contains an underscore.
dotnet_diagnostic.SA1310.severity = none

# The name of a static readonly field does not begin with an upper-case letter.
dotnet_diagnostic.SA1311.severity = none

# The name of a variable in C# does not begin with a lower-case letter.
dotnet_diagnostic.SA1312.severity = error

# The name of a parameter in C# does not begin with a lower-case letter.
dotnet_diagnostic.SA1313.severity = error

# The name of a C# type parameter does not begin with the capital letter T.
dotnet_diagnostic.SA1314.severity = error

# Element names within a tuple type should have the correct casing.
dotnet_diagnostic.SA1316.severity = error


### Maintainability Rules (SA1400-)
# Rules which improve code maintainability.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/MaintainabilityRules.md

# The access modifier for a C# element has not been explicitly defined.
dotnet_diagnostic.SA1400.severity = error

# A field within a C# class has an access modifier other than private.
dotnet_diagnostic.SA1401.severity = error

# A C# code file contains more than one unique type.
dotnet_diagnostic.SA1402.severity = none

# A C# code file contains more than one namespace.
dotnet_diagnostic.SA1403.severity = error

# A Code Analysis SuppressMessage attribute does not include a justification.
dotnet_diagnostic.SA1404.severity = error

# A call to Debug.Assert in C# code does not include a descriptive message.
dotnet_diagnostic.SA1405.severity = error

# A call to Debug.Fail in C# code does not include a descriptive message.
dotnet_diagnostic.SA1406.severity = error

# A C# statement contains a complex arithmetic expression which omits parenthesis around operators.
dotnet_diagnostic.SA1407.severity = error

# A C# statement contains a complex conditional expression which omits parenthesis around operators.
dotnet_diagnostic.SA1408.severity = error

# A C# file contains code which is unnecessary and can be removed without changing the overall logic of the code.
dotnet_diagnostic.SA1409.severity = error

# A call to a C# anonymous method does not contain any method parameters, yet the statement still includes parenthesis.
dotnet_diagnostic.SA1410.severity = error

# An attribute declaration does not contain any parameters, yet it still includes parenthesis.
dotnet_diagnostic.SA1411.severity = error

# The encoding of the file is not UTF-8 with byte order mark.
dotnet_diagnostic.SA1412.severity = none

# A multi-line initializer should use a comma on the last item.
dotnet_diagnostic.SA1413.severity = error

# Tuple types appearing in member declarations should have explicitly named tuple elements.
dotnet_diagnostic.SA1414.severity = error


### Layout Rules (SA1500-)
# Rules which enforce code layout and line spacing.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/LayoutRules.md

# The opening or closing brace within a C# statement, element, or expression is not placed on its own line.
dotnet_diagnostic.SA1500.severity = error

# A C# statement containing opening and closing braces is written completely on a single line.
dotnet_diagnostic.SA1501.severity = error

# A C# element containing opening and closing braces is written completely on a single line.
dotnet_diagnostic.SA1502.severity = error

# The opening and closing braces for a C# statement have been omitted.
dotnet_diagnostic.SA1503.severity = error

# Within a C# property, indexer or event, at least one of the child accessors is written on a single line, and at least one of the child accessors is written across multiple lines.
dotnet_diagnostic.SA1504.severity = none

# An opening brace within a C# element, statement, or expression is followed by a blank line.
dotnet_diagnostic.SA1505.severity = error

# An element documentation header above a C# element is followed by a blank line.
dotnet_diagnostic.SA1506.severity = error

# The C# code contains multiple blank lines in a row.
dotnet_diagnostic.SA1507.severity = error

# A closing brace within a C# element, statement, or expression is preceded by a blank line.
dotnet_diagnostic.SA1508.severity = error

# An opening brace within a C# element, statement, or expression is preceded by a blank line.
dotnet_diagnostic.SA1509.severity = error

# Chained C# statements are separated by a blank line.
dotnet_diagnostic.SA1510.severity = error

# The while footer at the bottom of a do-while statement is separated from the statement by a blank line.
dotnet_diagnostic.SA1511.severity = error

# A single-line comment within C# code is followed by a blank line.
dotnet_diagnostic.SA1512.severity = error

# A closing brace within a C# element, statement, or expression is not followed by a blank line.
dotnet_diagnostic.SA1513.severity = none

# An element documentation header above a C# element is not preceded by a blank line.
dotnet_diagnostic.SA1514.severity = error

# A single-line comment within C# code is not preceded by a blank line.
dotnet_diagnostic.SA1515.severity = error

# Adjacent C# elements are not separated by a blank line.
dotnet_diagnostic.SA1516.severity = none

# The code file has blank lines at the start.
dotnet_diagnostic.SA1517.severity = error

# The line endings at the end of a file do not match the settings for the project.
dotnet_diagnostic.SA1518.severity = error

# The opening and closing braces for a multi-line C# statement have been omitted.
dotnet_diagnostic.SA1519.severity = error

# The opening and closing braces of a chained `if`/`else if`/`else` construct were included for some clauses, but omitted for others.
dotnet_diagnostic.SA1520.severity = error


### Documentation Rules (SA1600-)
# Rules which verify the content and formatting of code documentation.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/DocumentationRules.md

# A C# code element is missing a documentation header.
dotnet_diagnostic.SA1600.severity = none

# A C# partial element is missing a documentation header.
dotnet_diagnostic.SA1601.severity = none

# An item within a C# enumeration is missing an Xml documentation header.
dotnet_diagnostic.SA1602.severity = none

# The Xml within a C# element's document header is badly formed.
dotnet_diagnostic.SA1603.severity = error

# The Xml header documentation for a C# element is missing a `<summary>` tag.
dotnet_diagnostic.SA1604.severity = error

# The `<summary>` or `<content>` tag within the documentation header for a C# code element is missing or empty.
dotnet_diagnostic.SA1605.severity = none

# The `<summary>` tag within the documentation header for a C# code element is empty.
dotnet_diagnostic.SA1606.severity = error

# The `<summary>` or `<content>` tag within the documentation header for a C# code element is empty.
dotnet_diagnostic.SA1607.severity = error

# The `<summary>` tag within an element's Xml header documentation contains the default text generated by Visual Studio during the creation of the element.
dotnet_diagnostic.SA1608.severity = error

# The Xml header documentation for a C# property does not contain a `<value>` tag.
dotnet_diagnostic.SA1609.severity = none

# The Xml header documentation for a C# property contains an empty `<value>` tag.
dotnet_diagnostic.SA1610.severity = error

# A C# method, constructor, delegate or indexer element is missing documentation for one or more of its parameters.
dotnet_diagnostic.SA1611.severity = error

# The documentation describing the parameters to a C# method, constructor, delegate or indexer element does not match the actual parameters on the element.
dotnet_diagnostic.SA1612.severity = error

# A `<param>` tag within a C# element's documentation header is missing a name attribute containing the name of the parameter.
dotnet_diagnostic.SA1613.severity = error

# A `<param>` tag within a C# element's documentation header is empty.
dotnet_diagnostic.SA1614.severity = error

# A C# element is missing documentation for its return value.
dotnet_diagnostic.SA1615.severity = error

# The `<returns>` tag within a C# element's documentation header is empty.
dotnet_diagnostic.SA1616.severity = error

# A C# code element does not contain a return value, or returns void, but the documentation header for the element contains a `<returns>` tag.
dotnet_diagnostic.SA1617.severity = none

# A generic C# element is missing documentation for one or more of its generic type parameters.
dotnet_diagnostic.SA1618.severity = error

# A generic, partial C# element is missing documentation for one or more of its generic type parameters, and the documentation for the element contains a `<summary>` tag.
dotnet_diagnostic.SA1619.severity = error

# The `<typeparam>` tags within the Xml header documentation for a generic C# element do not match the generic type parameters on the element.
dotnet_diagnostic.SA1620.severity = error

# A `<typeparam>` tag within the Xml header documentation for a generic C# element is missing a name attribute, or contains an empty name attribute.
dotnet_diagnostic.SA1621.severity = error

# A `<typeparam>` tag within the Xml header documentation for a generic C# element is empty.
dotnet_diagnostic.SA1622.severity = error

# The documentation text within a C# property's `<summary>` tag does not match the accessors within the property.
dotnet_diagnostic.SA1623.severity = none

# The documentation text within a C# property's `<summary>` tag takes into account all of the accessors within the property, but one of the accessors has limited access.
dotnet_diagnostic.SA1624.severity = none

# The Xml documentation for a C# element contains two or more identical entries, indicating that the documentation has been copied and pasted.
dotnet_diagnostic.SA1625.severity = error

# The C# code contains a single-line comment which begins with three forward slashes in a row.
dotnet_diagnostic.SA1626.severity = error

# The Xml header documentation for a C# code element contains an empty tag.
dotnet_diagnostic.SA1627.severity = error

# A section of the Xml header documentation for a C# element does not begin with a capital letter.
dotnet_diagnostic.SA1628.severity = error

# A section of the Xml header documentation for a C# element does not end with a period (also known as a full stop).
dotnet_diagnostic.SA1629.severity = error

# A section of the Xml header documentation for a C# element does not contain any whitespace between words.
dotnet_diagnostic.SA1630.severity = none

# A section of the Xml header documentation for a C# element does not contain enough alphabetic characters.
dotnet_diagnostic.SA1631.severity = none

# A violation of this rule occurs when part of the documentation is too short. This can often indicate that the documentation is not descriptive.
dotnet_diagnostic.SA1632.severity = none

# A C# code file is missing a standard file header.
dotnet_diagnostic.SA1633.severity = warning

# The file header at the top of a C# code file is missing a copyright tag.
dotnet_diagnostic.SA1634.severity = warning

# The file header at the top of a C# code file is missing copyright text.
dotnet_diagnostic.SA1635.severity = warning

# The file header at the top of a C# code file does not contain the appropriate copyright text.
dotnet_diagnostic.SA1636.severity = warning

# The file header at the top of a C# code file is missing the file name.
dotnet_diagnostic.SA1637.severity = none

# The file tag within the file header at the top of a C# code file does not contain the name of the file.
dotnet_diagnostic.SA1638.severity = none

# The file header at the top of a C# code file does not contain a filled-in summary tag.
dotnet_diagnostic.SA1639.severity = warning

# The file header at the top of a C# code file does not contain company name text.
dotnet_diagnostic.SA1640.severity = warning

# The file header at the top of a C# code file does not contain the appropriate company name text.
dotnet_diagnostic.SA1641.severity = warning

# The XML documentation header for a C# constructor does not contain the appropriate summary text.
dotnet_diagnostic.SA1642.severity = none

# The Xml documentation header for a C# finalizer does not contain the appropriate summary text.
dotnet_diagnostic.SA1643.severity = error

# A section within the Xml documentation header for a C# element contains blank lines.
dotnet_diagnostic.SA1644.severity = error

# An included Xml documentation file does not exist.
dotnet_diagnostic.SA1645.severity = error

# An included Xml documentation link contains an invalid path.
dotnet_diagnostic.SA1646.severity = error

# An include tag within an Xml documentation header does not contain valid file and path attribute.
dotnet_diagnostic.SA1647.severity = error

# `<inheritdoc>` has been used on an element that doesn't inherit from a base class or implement an interface.
dotnet_diagnostic.SA1648.severity = error

# The file name of a C# code file does not match the first type declared in the file.
dotnet_diagnostic.SA1649.severity = none

# The element documentation for the element contains one or more spelling mistakes or unrecognized words.
dotnet_diagnostic.SA1650.severity = none

# The documentation for the element contains one or more `<placeholder>` elements.
dotnet_diagnostic.SA1651.severity = none

# This rule was moved to [SA0001](SA0001.md)
dotnet_diagnostic.SA1652.severity = none


### Alternative Rules (SX0000-)
# Rules which are non-standard extensions to the default StyleCop behavior, and represent an alternative style which is adopted by some projects. Alternative rules are known to directly conflict with standard StyleCop rules.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/AlternativeRules.md

# A call to an instance member of the local class or a base class is prefixed with 'this.', within a C# code file.
dotnet_diagnostic.SX1101.severity = error

# A field name does not begin with an underscore.
dotnet_diagnostic.SX1309.severity = none

# A static field name does not begin with an underscore.
dotnet_diagnostic.SX1309S.severity = none

## *END* StyleCop.Analyzers



##
## ReSharper Inspect Code https://www.jetbrains.com/help/resharper/Reference__Code_Inspections_CSHARP.html
##

extends = resharper-inspect-code.editorconfig

## *END* ReSharper Inspect Code



##
## Roslynator https://josefpihrt.github.io/docs/roslynator/configuration
##

# Disable all rules
# dotnet_analyzer_diagnostic.category-roslynator.severity = none
# roslynator_analyzers.enabled_by_default = false
# roslynator_refactorings.enabled = false
# roslynator_compiler_diagnostic_fixes.enabled = false

# Enable all rules
dotnet_analyzer_diagnostic.category-roslynator.severity = error
roslynator_analyzers.enabled_by_default = true
roslynator_refactorings.enabled = true
roslynator_compiler_diagnostic_fixes.enabled = true

### RCS0056: A line is too long https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0056
roslynator_max_line_length = 200
dotnet_diagnostic.rcs0056.severity = error

# RCS1033: Remove redundant boolean literal https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1033
dotnet_diagnostic.rcs1033.severity = error

# RCS1140: Add exception to documentation comment https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1140/
dotnet_diagnostic.rcs1140.severity = error

# RCS1118: Mark local variable as const https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1118
dotnet_diagnostic.rcs1118.severity = error

# RCS1005: Simplify nested using statement https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1005
dotnet_diagnostic.rcs1005.severity = error

## *END* Roslynator



##
## Editor Guidelines https://marketplace.visualstudio.com/items?itemName=PaulHarrington.EditorGuidelines
##

guidelines = 200
guidelines_style = 1px solid 40ff0000

## *END* Editor Guidelines



# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size = 2

[*.{csproj,vbproj,proj,nativeproj,locproj}]
charset = utf-8

# Xml build files
[*.builds]
indent_size = 2

# Xml files
[*.{xml,stylecop,resx,ruleset}]
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size = 2

# YAML config files
[*.{yml,yaml}]
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf
[*.{cmd,bat}]
end_of_line = crlf
